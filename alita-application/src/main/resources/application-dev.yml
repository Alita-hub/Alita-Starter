#  数据源配置
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/alita?serverTimezone=Shanghai&?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    # 连接池配置
    druid:
      # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initialSize: 1
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 1
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      maxWait: 5000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 2000
      # 配置一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 60000
      # 配置一个连接在池中最大生存的时间
      max-evictable-idle-time-millis: 90000
      # 用来检测连接是否有效的sql
      validation-query: select 1
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      keep-alive: true
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      maxPoolPreparedStatementPerConnectionSize: -1
      # 这里配置的是插件,常用的插件有:  监控统计: filter:stat, 日志监控: filter:log4j 或者 slf4j, 防御SQL注入: filter:wall
      filters: stat,log4j,wall
      filter:
        # 监控配置StatFilter
        stat:
          # 启动监控
          enabled: true
          # 监控慢sql语句
          log-slow-sql: true
          # 监控执行时间超过2000毫秒的sql
          slow-sql-millis: 2000
        # 拦截配置WallFilter
        wall:
          enabled: true
          config:
            # 是否允许执行DELETE语句
            delete-allow: false
            # 是否允许修改表
            drop-table-allow: false
            # 是否允许语句中存在注释，Oracle的用户不用担心，Wall能够识别hints和注释的区别
            comment-allow: false
            # 是否允许一次执行多条语句，缺省关闭
            multi-statement-allow: true
        # 配置日志输出
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false








